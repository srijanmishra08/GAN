Using device: cpu
Dataset: cifar10, Batch size: 64, Total batches: 782
Model parameters: 31,956,099
/Users/s/Desktop/GAN/diffusion-cifar10/venv/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/Users/s/Desktop/GAN/diffusion-cifar10/venv/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG19_Weights.IMAGENET1K_V1`. You can also use `weights=VGG19_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Downloading: "https://download.pytorch.org/models/vgg19-dcbb9e9d.pth" to /Users/s/.cache/torch/hub/checkpoints/vgg19-dcbb9e9d.pth
100%|████████████████████████████████████████████████████████████████████| 548M/548M [02:12<00:00, 4.35MB/s]
Epoch 0:   0%|                                                                      | 0/782 [00:28<?, ?it/s]
Traceback (most recent call last):
  File "/Users/s/Desktop/GAN/diffusion-cifar10/train.py", line 254, in <module>
    main()
  File "/Users/s/Desktop/GAN/diffusion-cifar10/train.py", line 208, in main
    metrics = train_epoch(model, diffusion, dataloader, optimizer, perceptual_loss, feature_loss, device, config, epoch)
  File "/Users/s/Desktop/GAN/diffusion-cifar10/train.py", line 92, in train_epoch
    feat_loss = feature_loss(denoised, data)
  File "/Users/s/Desktop/GAN/diffusion-cifar10/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/s/Desktop/GAN/diffusion-cifar10/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/s/Desktop/GAN/diffusion-cifar10/utils/losses.py", line 36, in forward
    input_features = self.extract_features(input)
  File "/Users/s/Desktop/GAN/diffusion-cifar10/utils/losses.py", line 48, in extract_features
    x = layer(x)
  File "/Users/s/Desktop/GAN/diffusion-cifar10/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/s/Desktop/GAN/diffusion-cifar10/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/s/Desktop/GAN/diffusion-cifar10/venv/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 554, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/Users/s/Desktop/GAN/diffusion-cifar10/venv/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 549, in _conv_forward
    return F.conv2d(
RuntimeError: Expected 3D (unbatched) or 4D (batched) input to conv2d, but got input of size: [64, 1, 3, 32, 256]
